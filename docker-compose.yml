services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: insightly
      POSTGRES_USER: insightly_user
      POSTGRES_PASSWORD: insightly_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docs/db/start.db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insightly_user -d insightly"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - insightly-network

  api:
    build:
      context: ./api
    env_file:
      - ./api/.env
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=insightly
      - DATABASE_USER=insightly_user
      - DATABASE_PASSWORD=insightly_password
      - DATABASE_POOL_SIZE=10
      - HOST=0.0.0.0
      - PORT=3001
      - FRONTEND_URL=http://app:3000
    networks:
      - insightly-network
    restart: unless-stopped

  app:
    build:
      context: ./app
    env_file:
      - ./app/.env.local
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      - API_BASE_URL=http://api:3001
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3001
    networks:
      - insightly-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  insightly-network:
    driver: bridge